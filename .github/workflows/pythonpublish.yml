name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: orm
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies and run tests
      env:
        POSTGRES_DATABASE_HOST: localhost
        POSTGRES_DATABASE_DATABASE: postgres
        POSTGRES_DATABASE_USER: postgres
        POSTGRES_DATABASE_PASSWORD: postgres
        POSTGRES_DATABASE_PORT: ${{ job.services.postgres.ports[5432] }}
        MYSQL_DATABASE_HOST: localhost
        MYSQL_DATABASE_DATABASE: orm
        MYSQL_DATABASE_USER: root
        MYSQL_DATABASE_PORT: ${{ job.services.mysql.ports[3306] }}
      run: |
        python -m pip install --upgrade pip
        make init
        python orm migrate --connection postgres
        python orm migrate --connection mysql
        make test
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        make publish
